/*
 This Gradle script provides a way to load values from a properties file into the project.
 Example:
 
 build.properties file has entry:
 
 curseapi=123456789
 
 Add to your build.gradle file:
 apply from: "https://raw.githubusercontent.com/ReadOnlyDevelopment/Misc/master/scripts/secret.gradle"
 loadSecrets()
 Now you can test if your key is loaded with this custom task (make sure to add it to the end of your build.gradle file)
 
 task checkKeys {
	def key = secret.curseapi
	doLast {
		println "${key}"
	}
 }
  Now run the command
  "gradlew checkKeys"
  
  output:
  > Task :checkKeys
  123456789
  
  you can also use "secret.containsKey('curseapi')" to to check if the property value exists and is set
*/

def loadSecrets() {

    final def secretFile = file System.getenv('SECRET_FILE') ?: 'build.properties'   
    loadSecrets(secretFile)
}

def loadSecrets(secretFile) {

    if (secretFile.exists()) {
    
	    ext.configFile = file "build.properties"
	    secretFile.withReader {
		    def prop = new Properties()
		    prop.load(it)
		    ext.secret = new ConfigSlurper().parse prop
        }
	}
}

ext {
    loadSecrets = this.&loadSecrets
}
