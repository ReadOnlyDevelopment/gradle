import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.util.GradleVersion

def javaVersion = project.findProperty("javaVersion") ?: JavaVersion.VERSION_1_8
def majorJavaVersion = javaVersion.getMajorVersion()
def majorJavaVersionInt = majorJavaVersion.toInteger()

def gcVersion = project.findProperty("gcVersion") ? project.gcVersion : 4.0.2
def gcBuild = project.findProperty("gcBuild") ? project.gcBuild : 261
def includeGCCore = !project.hasProperty("includeGCCore") || project.includeGCCore
def includeGCPlanets = !project.hasProperty("includeGCPlanets") || project.includeGCPlanets
def miccoreAsRuntime = !project.hasProperty("miccoreAsRuntime") || project.miccoreAsRuntime

String build = gcBuild.toString()
String fullVersion = gcVersion.toString() + "." + gcBuild.toString()

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url = "https://files.minecraftforge.net/maven" }
	
        dependencies {
            classpath "gradle.plugin.org.cadixdev.gradle:licenser:0.5.1"
	    classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        }
    }
}

plugins {
    id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.71.4"
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'org.ajoberstar.grgit' version '3.1.1'
    id 'java'
    id 'eclipse'
    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = targetCompatibility = javaVersion
compileJava {
	sourceCompatibility = targetCompatibility = javaVersion
}

repositories {
    jcenter()
    mavenCentral()
    ivy {
        url "https://micdoodle8.com/new-builds/"
        layout 'pattern', {
            artifact "[organization]/${build}/[module]-[revision].jar"
        }
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    if(!includeGCCore) {
    	compile "GC-1.12-dev:Galacticraft-API:${gcversion}"
    } else {
    	compile "GC-1.12-dev:GalacticraftCore-Dev:${gcversion}"
    }
    if(includeGCPlanets) {
        compile "GC-1.12-dev:Galacticraft-Planets-Dev:${gcversion}"
    }
    if(miccoreAsRuntime) {
        runtime "GC-1.12-dev:MicdoodleCore-Dev:${gcversion}"
    } else {
    	compile "GC-1.12-dev:MicdoodleCore-Dev:${gcversion}"
    }
}

license {
    include "**/*.java"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:all"
}

javadoc.options {
    source = majorJavaVersion
    encoding = "UTF-8"
    docTitle = windowTitle = "${project.name} ${project.version}"

    if (majorJavaVersionInt > 10) {
        links = ["https://docs.oracle.com/en/java/javase/${majorJavaVersion}/docs/api".toString()]
    } else {
        links = ["https://docs.oracle.com/javase/${majorJavaVersion}/docs/api/".toString()]
    }
}
